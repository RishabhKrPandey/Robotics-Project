# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-kADYQqs-H-xj3mmP0Uab6BgZz-zoHwn
"""

import cv2 as cv
import numpy as np
from google.colab.patches import cv2_imshow

img=cv.imread("./task2.jpeg")                                  # Reading image
cv2_imshow(img)
img_gray=cv.cvtColor(img,cv.COLOR_BGR2GRAY)                    # Converting to grayscale image
cv2_imshow(img_gray)
edges=cv.Canny(img_gray,threshold1=100,threshold2=200)         # Canny Edge Detection
cv2_imshow(edges)
contours, _ = cv.findContours(edges, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)
contour_img=img.copy()
cv.drawContours(contour_img, contours, -1, (0, 255, 0), 3)     # Finding Contours and displaying
cv2_imshow(contour_img)
img_blur=cv.blur(img,(5,5))                                    # Blurring the image
cv2_imshow(img_blur)
lower_white = np.array([220,220, 220])                         # Masking the image
upper_white = np.array([255, 255, 255])
mask = cv.inRange(img, lower_white, upper_white)   
result = cv.bitwise_and(img, img, mask=mask)                    # To display bright spots

cv2_imshow(result)
cv.waitKey(0)
cv.destroyAllWindows()
